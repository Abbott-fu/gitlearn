#server端接收文件
# -*- encoding: utf-8 -*-
import socket
import os
import struct
import json

buffer_size=4096


sk=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sk.bind(('127.0.0.1',8001))
sk.listen(5)

conn,caddr=sk.accept()
print("Get connection from ",caddr)
#获得报文头部的长度，因为报文头部是整数，这里使用的是struct自定制的报头
head_len=conn.recv(4)
#unpack返回一个元组，第一个值是数据值
head_len=struct.unpack("i",head_len)[0]

file_meta=conn.recv(head_len).decode("utf-8")
file_meta=json.loads(file_meta)
file_name=os.path.basename(file_meta['file_path'])
file_size=file_meta['file_size']

recvlen=0
with open(  os.path.join( '.\\',  file_name) ,'wb' ) as f:
#这里蕴含的思想是，只要有数据，我就不停的接受，直到对方关闭连接。当然可以只接收file_size的长度
    while True:
        content=conn.recv(buffer_size)
        if content:
            f.write(content)
            recvlen+=len(content)
            print("received:" ,recvlen/file_size, "%")
        else:
            break

conn.close()
sk.close()

#client发送文件

# -*- encoding: utf-8 -*-
import socket
import os
import struct
import json

buffer=4096

file_name=r'D:\BaiduYunDownload\IPv6\IPv6-DayEight上.mp4'
file_size=os.path.getsize(file_name)
file_meta={'file_path':file_name,'file_size':file_size}
file_meta=json.dumps(file_meta)
file_meta=file_meta.encode("utf-8")
head_len=len(file_meta)
head_len=struct.pack("i",head_len)
print(head_len)


csk=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
csk.connect(('127.0.0.1',8001))
#发送报头信息
csk.send(head_len+file_meta)

with open(file_name, 'rb') as f:
    while True:
        content=f.read(buffer)
        if content:
            csk.send(content)
        else:
            break

csk.close()




